---
trigger:

  # Already default, but made explicit here
  branches:
    include: ["*"]
    exclude: ["gh-pages"]

  # Ensure Azure triggers a build on a new tag
  # We use these for GitHub releases
  tags:
    include: ["*"]

  paths:
    # Do not trigger a build on changes at these paths
    exclude:
      - docs/*
      - .gitignore
      - LICENSE.txt
      - README.md


jobs:

  # -----------------------------------------------------------------------
  #
  # Test
  #
  # -----------------------------------------------------------------------

  - job: Maya
    pool:
      vmImage: "ubuntu-16.04"  # Xenial
    strategy:
      matrix:
        maya2015:
          containerImage: mottosso/maya:2015sp6
        maya2016:
          containerImage: mottosso/maya:2016sp1
        maya2017:
          containerImage: mottosso/maya:2017
        maya2018:
          containerImage: mottosso/maya:2018
        maya2019:
          containerImage: mottosso/maya:2019
        maya2020:
          containerImage: mottosso/maya:2020
    container: $[ variables['containerImage'] ]
    steps:
      - script: |
          wget https://bootstrap.pypa.io/2.7/get-pip.py
          mayapy get-pip.py --user
          mayapy -m pip install --user \
            nose \
            nose-exclude \
            coverage \
            flaky \
            sphinx \
            sphinxcontrib-napoleon
        displayName: "pip install"

        # Since 2019, this sucker throws an unnecessary warning if not declared
      - script: |
          export XDG_RUNTIME_DIR=/var/tmp/runtime-root
        displayName: "Environment"

      - script: |
          mayapy --version
          mayapy run_tests.py
        displayName: "Unittests"

      - script: |
          mayapy build_livedocs.py && mayapy test_docs.py
        displayName: "Test docs"

      - script: |
          mayapy build_docs.py
        displayName: "Build docs"

      - publish: $(System.DefaultWorkingDirectory)/build/html
        artifact: docs
        condition: and(succeeded(), eq(variables['containerImage'], 'mottosso/maya:2020'))

  # -----------------------------------------------------------------------
  #
  # Deploy docs
  #
  # -----------------------------------------------------------------------

  - job: Deploy_Docs
    condition: startsWith(variables['Build.SourceBranch'], 'refs/tags')
    pool:
      vmImage: "ubuntu-latest"
    steps:
      - task: DownloadPipelineArtifact@2
        inputs:
          artifact: docs
          path: $(Build.SourcesDirectory)/build/html

      - script: |
          git init
          git config --local user.name "Azure Pipelines"
          git config --local user.email "mitchellcoote@gmail.com"
          git add .
          touch .nojekyll
          git add .nojekyll
          git commit -m "Commit generated documentation"
        displayName: "Commit pages"
        workingDirectory: build/html

      - task: InstallSSHKey@0
        inputs:
          knownHostsEntry: $(KNOWN_HOST)
          sshKeySecureFile: deploy_key

      - script: |
          git remote add origin git@github.com:mottosso/cmdx.git
          git push -f origin HEAD:gh-pages
        displayName: "Publish GitHub Pages"
        workingDirectory: build/html

    dependsOn: Maya


  # -----------------------------------------------------------------------
  #
  # Deploy to PyPI
  #
  # -----------------------------------------------------------------------

  - job: Deploy
    condition: startsWith(variables['Build.SourceBranch'], 'refs/tags')
    pool:
      vmImage: "ubuntu-latest"
    strategy:
      matrix:
        Python37:
          python.version: "3.7"

    steps:
      - task: UsePythonVersion@0
        inputs:
          versionSpec: "$(python.version)"
        displayName: "Use Python $(python.version)"

      - script: |
          pip install wheel twine
          python setup.py sdist bdist_wheel
          echo [distutils] > ~/.pypirc
          echo index-servers=pypi >> ~/.pypirc
          echo [pypi] >> ~/.pypirc
          echo username=$_LOGIN >> ~/.pypirc
          echo password=$_PASSWORD >> ~/.pypirc
          twine upload dist/*
        displayName: "Deploy to PyPI"

        # Decrypt secret variables provided by Azure web console
        env:
          _LOGIN: $(PYPI_LOGIN)
          _PASSWORD: $(PYPI_PASSWORD)

    dependsOn: Maya
